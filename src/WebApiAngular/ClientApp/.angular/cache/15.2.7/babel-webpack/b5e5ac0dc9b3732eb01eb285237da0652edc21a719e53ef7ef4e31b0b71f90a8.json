{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\nfunction NavMenuComponent_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const theme_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", theme_r1.cssMin);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", theme_r1.name, \" \");\n  }\n}\nconst _c0 = function () {\n  return [\"/\"];\n};\nconst _c1 = function (a0) {\n  return {\n    show: a0\n  };\n};\nexport class NavMenuComponent {\n  collapse() {\n    this.isExpanded = false;\n  }\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n  constructor(http) {\n    this.http = http;\n    this.themes = [];\n    this.selectedTheme = '';\n    this.isExpanded = false;\n  }\n  ngOnInit() {\n    this.http.get(`https://bootswatch.com/api/5.json`).subscribe(result => {\n      this.themes = result.themes;\n    }, error => {\n      console.error(error);\n    });\n  }\n  onSelectedTheme() {\n    debugger;\n    let link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.setAttribute('href', this.selectedTheme);\n    document.head.appendChild(link);\n  }\n}\nNavMenuComponent.ɵfac = function NavMenuComponent_Factory(t) {\n  return new (t || NavMenuComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nNavMenuComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NavMenuComponent,\n  selectors: [[\"app-nav-menu\"]],\n  decls: 14,\n  vars: 8,\n  consts: [[\"data-bs-theme\", \"dark\", 1, \"navbar\", \"navbar-expand\", \"navbar-toggleable-sm\", \"bg-primary\", \"box-shadow\"], [1, \"container\"], [1, \"navbar-brand\", 3, \"routerLink\"], [\"type\", \"button\", \"data-toggle\", \"collapse\", \"data-target\", \".navbar-collapse\", \"aria-label\", \"Toggle navigation\", 1, \"navbar-toggler\", 3, \"click\"], [1, \"navbar-toggler-icon\"], [1, \"navbar-collapse\", \"collapse\", \"d-sm-inline-flex\", \"justify-content-end\", 3, \"ngClass\"], [\"role\", \"search\", 1, \"d-flex\"], [1, \"input-group\"], [\"id\", \"basic-addon1\", 1, \"input-group-text\"], [\"name\", \"selectedTheme\", \"placeholder\", \"Username\", \"aria-label\", \"Username\", \"aria-describedby\", \"basic-addon1\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngValue\"]],\n  template: function NavMenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"header\")(1, \"nav\", 0)(2, \"div\", 1)(3, \"a\", 2);\n      i0.ɵɵtext(4, \"TestGorilla-Arcadian\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function NavMenuComponent_Template_button_click_5_listener() {\n        return ctx.toggle();\n      });\n      i0.ɵɵelement(6, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6)(9, \"div\", 7)(10, \"span\", 8);\n      i0.ɵɵtext(11, \"Theme\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"select\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function NavMenuComponent_Template_select_ngModelChange_12_listener($event) {\n        return ctx.selectedTheme = $event;\n      })(\"change\", function NavMenuComponent_Template_select_change_12_listener() {\n        return ctx.onSelectedTheme();\n      });\n      i0.ɵɵtemplate(13, NavMenuComponent_option_13_Template, 2, 2, \"option\", 10);\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(5, _c0));\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c1, ctx.isExpanded));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedTheme);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.themes);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel, i4.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBa0JDIiwic291cmNlc0NvbnRlbnQiOlsiLyphLm5hdmJhci1icmFuZCB7XHJcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgd29yZC1icmVhazogYnJlYWstYWxsO1xyXG59XHJcblxyXG5odG1sIHtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XHJcbiAgaHRtbCB7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgfVxyXG59XHJcblxyXG4uYm94LXNoYWRvdyB7XHJcbiAgYm94LXNoYWRvdzogMCAuMjVyZW0gLjc1cmVtIHJnYmEoMCwgMCwgMCwgLjA1KTtcclxufVxyXG4qL1xyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nclass Theme {\n  constructor(name, cssMin) {\n    this.name = name;\n    this.cssMin = cssMin;\n  }\n}\nclass Bootswatch {\n  constructor(themes) {\n    this.themes = themes;\n  }\n}","map":{"version":3,"mappings":";;;;;;;IAmBcA,kCAA8D;IAC5DA,YACF;IAAAA,iBAAS;;;;IAF4BA,yCAAwB;IAC3DA,eACF;IADEA,8CACF;;;;;;;;;;;ACbd,OAAM,MAAOC,gBAAgB;EAM3BC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,KAAK;EACzB;EAEAC,MAAM;IACJ,IAAI,CAACD,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU;EACpC;EAEAE,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAbjB,WAAM,GAAiB,EAAE;IACzB,kBAAa,GAAW,EAAE;IAEjC,eAAU,GAAG,KAAK;EAUsB;EAExCC,QAAQ;IAEN,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,mCAAmC,CAAC,CAACC,SAAS,CAACC,MAAM,IAAG;MAEhF,IAAI,CAACC,MAAM,GAAGD,MAAM,CAACC,MAAM;IAC7B,CAAC,EAAEC,KAAK,IAAG;MACTC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EAEJ;EAEAE,eAAe;IACb;IACA,IAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;IACzCF,IAAI,CAACG,GAAG,GAAG,YAAY;IACvBH,IAAI,CAACI,YAAY,CAAC,MAAM,EAAE,IAAI,CAACC,aAAa,CAAC;IAE7CJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,IAAI,CAAC;EACjC;;AAlCWd,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR7B3B,8BAAQ;MAG2CA,oCAAoB;MAAAA,iBAAI;MACrEA,iCAM2B;MAAnBA;QAAA,OAAS4B,YAAQ;MAAA,EAAC;MACxB5B,0BAAyC;MAC3CA,iBAAS;MACTA,8BACsC;MAGiBA,sBAAK;MAAAA,iBAAO;MAC7DA,kCAAwL;MAAhLA;QAAA;MAAA,EAA2B;QAAA,OAAW4B,qBAAiB;MAAA,EAA5B;MACjC5B,0EAES;MACXA,iBAAS;;;MAnBSA,eAAoB;MAApBA,uDAAoB;MAMpCA,eAAiC;MAAjCA,+CAAiC;MAKpCA,eAAgC;MAAhCA,oEAAgC;MAIvBA,eAA2B;MAA3BA,2CAA2B;MACPA,eAAS;MAATA,oCAAS;;;;;;AC0BjD,MAAM6B,KAAK;EACTxB,YAAmByB,IAAY,EAASC,MAAc;IAAnC,SAAI,GAAJD,IAAI;IAAiB,WAAM,GAANC,MAAM;EAAY;;AAE5D,MAAMC,UAAU;EACd3B,YAAmBM,MAAe;IAAf,WAAM,GAANA,MAAM;EAAa","names":["i0","NavMenuComponent","collapse","isExpanded","toggle","constructor","http","ngOnInit","get","subscribe","result","themes","error","console","onSelectedTheme","link","document","createElement","rel","setAttribute","selectedTheme","head","appendChild","selectors","decls","vars","consts","template","ctx","Theme","name","cssMin","Bootswatch"],"sourceRoot":"","sources":["C:\\Users\\christopherayroso\\source\\repos\\testgorilla-arcadian\\src\\WebApiAngular\\ClientApp\\src\\app\\nav-menu\\nav-menu.component.html","C:\\Users\\christopherayroso\\source\\repos\\testgorilla-arcadian\\src\\WebApiAngular\\ClientApp\\src\\app\\nav-menu\\nav-menu.component.ts"],"sourcesContent":["<header>\r\n  <nav class=\"navbar navbar-expand navbar-toggleable-sm bg-primary box-shadow\" data-bs-theme=\"dark\">\r\n    <div class=\"container\">\r\n      <a class=\"navbar-brand\" [routerLink]=\"['/']\">TestGorilla-Arcadian</a>\r\n      <button class=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\".navbar-collapse\"\r\n              aria-label=\"Toggle navigation\"\r\n              [attr.aria-expanded]=\"isExpanded\"\r\n              (click)=\"toggle()\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"navbar-collapse collapse d-sm-inline-flex justify-content-end\"\r\n           [ngClass]=\"{ show: isExpanded }\">\r\n        <div class=\"d-flex\" role=\"search\">\r\n          <div class=\"input-group\">\r\n            <span class=\"input-group-text\" id=\"basic-addon1\">Theme</span>\r\n            <select [(ngModel)]=\"selectedTheme\" (change)=\"onSelectedTheme()\" name=\"selectedTheme\" class=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\r\n              <option *ngFor=\"let theme of themes\" [ngValue]=\"theme.cssMin\">\r\n                {{ theme.name }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <!--<ul class=\"navbar-nav flex-grow\">\r\n          <li\r\n            class=\"nav-item\"\r\n            [routerLinkActive]=\"['link-active']\"\r\n            [routerLinkActiveOptions]=\"{ exact: true }\"\r\n          >\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/']\">Home</a>\r\n          </li>\r\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/counter']\"\r\n              >Counter</a\r\n            >\r\n          </li>\r\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/fetch-data']\"\r\n              >Fetch data</a\r\n            >\r\n          </li>\r\n        </ul>-->\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</header>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  public themes: Array<Theme> = [];\r\n  public selectedTheme: string = '';\r\n\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.http.get<Bootswatch>(`https://bootswatch.com/api/5.json`).subscribe(result => {\r\n\r\n      this.themes = result.themes;\r\n    }, error => {\r\n      console.error(error);\r\n    });\r\n\r\n  }\r\n\r\n  onSelectedTheme() {\r\n    debugger;\r\n    let link = document.createElement('link');\r\n    link.rel = 'stylesheet';\r\n    link.setAttribute('href', this.selectedTheme);\r\n\r\n    document.head.appendChild(link);\r\n  }\r\n}\r\n\r\nclass Theme {\r\n  constructor(public name: String, public cssMin: String) { }\r\n}\r\nclass Bootswatch {\r\n  constructor(public themes: Theme[]) { }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}